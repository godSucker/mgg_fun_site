 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/src/components/simulators/reactor/ReactorSimulator.svelte b/src/components/simulators/reactor/ReactorSimulator.svelte
new file mode 100644
index 0000000000000000000000000000000000000000..8dd68afeeb166a09de44a3e3cca0521e5135f803
--- /dev/null
+++ b/src/components/simulators/reactor/ReactorSimulator.svelte
@@ -0,0 +1,583 @@
+<script lang="ts">
+  import type { BasicReward, GachaDefinition } from '@/lib/reactor-gacha';
+  import {
+    GACHA_NAME_RU,
+    STAR_ICON,
+    STAR_LABEL,
+    gachaMap,
+    getMutantName,
+  } from '@/lib/reactor-gacha';
+
+  export let gachaId: string;
+
+  const gacha: GachaDefinition | undefined = gachaMap[gachaId];
+  if (!gacha) {
+    throw new Error(`–ù–µ –Ω–∞–π–¥–µ–Ω –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å id "${gachaId}"`);
+  }
+
+  const gachaName = GACHA_NAME_RU[gachaId] ?? gachaId;
+
+  interface SpinResult {
+    item: BasicReward;
+    costType: 'token' | 'hc';
+    isCompletionReward: boolean;
+    completedNow: boolean;
+    completionTrigger?: string;
+  }
+
+  let unlocked = new Set<string>();
+  let completed = false;
+  let completionTrigger: string | null = null;
+  let lastResult: SpinResult | null = null;
+  let history: SpinResult[] = [];
+
+  const baseRewards = gacha.basic_elements.map((item) => ({
+    ...item,
+    name: getMutantName(item.specimen),
+  }));
+
+  const completionReward = gacha.completion_reward
+    ? { ...gacha.completion_reward, name: getMutantName(gacha.completion_reward.specimen) }
+    : null;
+
+  const totalBasicOdds = gacha.basic_elements.reduce((sum, item) => sum + item.odds, 0);
+
+  const formatPercent = (item: BasicReward) => {
+    const total = completed && completionReward
+      ? totalBasicOdds + completionReward.odds
+      : totalBasicOdds;
+    if (!total) return '‚Äî';
+    return `${((item.odds / total) * 100).toFixed(2)}%`;
+  };
+
+  const progress = () => {
+    if (!baseRewards.length) return 0;
+    return Math.round((unlocked.size / baseRewards.length) * 100);
+  };
+
+  function updateUnlocked(specimenId: string) {
+    if (!unlocked.has(specimenId)) {
+      const next = new Set(unlocked);
+      next.add(specimenId);
+      unlocked = next;
+      if (!completed && unlocked.size === baseRewards.length) {
+        completed = true;
+        completionTrigger = getMutantName(specimenId);
+      }
+    }
+  }
+
+  function registerResult(result: SpinResult) {
+    lastResult = result;
+    history = [result, ...history].slice(0, 12);
+  }
+
+  function rollToken(): BasicReward {
+    const options: BasicReward[] = [...gacha.basic_elements];
+    const weights: number[] = options.map((item) => item.odds);
+
+    if (completed && completionReward) {
+      options.push(completionReward);
+      weights.push(completionReward.odds);
+    }
+
+    const totalWeight = weights.reduce((sum, value) => sum + value, 0);
+    if (!totalWeight) {
+      return options[0];
+    }
+
+    let threshold = Math.random() * totalWeight;
+    for (let i = 0; i < options.length; i += 1) {
+      threshold -= weights[i];
+      if (threshold <= 0) {
+        return options[i];
+      }
+    }
+
+    return options[options.length - 1];
+  }
+
+  function rollSequential(): { reward: BasicReward; completedNow: boolean; trigger?: string } {
+    for (const item of gacha.basic_elements) {
+      if (!unlocked.has(item.specimen)) {
+        return {
+          reward: item,
+          completedNow: unlocked.size + 1 === baseRewards.length,
+          trigger: item.specimen,
+        };
+      }
+    }
+
+    if (!completed) {
+      completed = true;
+    }
+
+    if (completionReward) {
+      return { reward: completionReward, completedNow: false };
+    }
+
+    const randomIndex = Math.floor(Math.random() * baseRewards.length);
+    return { reward: baseRewards[randomIndex], completedNow: false };
+  }
+
+  function spin(costType: 'token' | 'hc') {
+    if (costType === 'token') {
+      const reward = rollToken();
+      const wasCompleted = completed;
+      updateUnlocked(reward.specimen);
+      const completedNow = !wasCompleted && completed && unlocked.size === baseRewards.length;
+      registerResult({
+        item: reward,
+        costType: 'token',
+        isCompletionReward: completionReward ? reward.specimen === completionReward.specimen : false,
+        completedNow,
+        completionTrigger: completedNow ? reward.specimen : undefined,
+      });
+      if (completedNow && !completionTrigger) {
+        completionTrigger = getMutantName(reward.specimen);
+      }
+    } else {
+      const { reward, completedNow, trigger } = rollSequential();
+      const wasCompleted = completed;
+      updateUnlocked(reward.specimen);
+      const completionJustNow = completedNow || (!wasCompleted && completed);
+      registerResult({
+        item: reward,
+        costType: 'hc',
+        isCompletionReward: completionReward ? reward.specimen === completionReward.specimen : false,
+        completedNow: completionJustNow,
+        completionTrigger: completionJustNow ? (trigger ?? reward.specimen) : undefined,
+      });
+      if (completionJustNow && !completionTrigger) {
+        completionTrigger = getMutantName((trigger ?? reward.specimen));
+      }
+    }
+  }
+</script>
+
+<div class="reactor-wrapper">
+  <section class="reactor-panel">
+    <header class="panel-header">
+      <div>
+        <h1>{gachaName}</h1>
+        <p class="subtitle">–°–∏–º—É–ª—è—Ç–æ—Ä —Ä–µ–∞–∫—Ç–æ—Ä–∞ ‚Ä¢ {baseRewards.length} –º—É—Ç–∞–Ω—Ç–æ–≤</p>
+      </div>
+      <div class="cost-block">
+        <div class="cost-item">
+          <span class="cost-label">–ñ–µ—Ç–æ–Ω—ã</span>
+          <strong>{gacha.token_cost}</strong>
+        </div>
+        <div class="cost-item">
+          <span class="cost-label">–ó–æ–ª–æ—Ç–æ</span>
+          <strong>{gacha.hc_cost}</strong>
+        </div>
+      </div>
+    </header>
+
+    <div class="actions">
+      <button class="spin token" on:click={() => spin('token')}>
+        üé≤ –ö—Ä—É—Ç–∏—Ç—å –∑–∞ –∂–µ—Ç–æ–Ω—ã
+      </button>
+      <button class="spin hc" on:click={() => spin('hc')}>
+        üí∞ –ö—Ä—É—Ç–∏—Ç—å –∑–∞ –∑–æ–ª–æ—Ç–æ
+      </button>
+    </div>
+
+    <div class="status">
+      <div class="progress">
+        <span>–ü—Ä–æ–≥—Ä–µ—Å—Å –∫–æ–ª–ª–µ–∫—Ü–∏–∏</span>
+        <div class="progress-bar">
+          <div class="progress-fill" style={`width: ${progress()}%`}></div>
+        </div>
+        <small>{unlocked.size} / {baseRewards.length} –º—É—Ç–∞–Ω—Ç–æ–≤ ({progress()}%)</small>
+        {#if completed}
+          <div class="completion">–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à—ë–Ω{completionTrigger ? `: ${completionTrigger}` : ''}!</div>
+        {/if}
+      </div>
+    </div>
+
+    {#if lastResult}
+      <div class="result-card">
+        <div class="result-header">
+          <span class={`badge ${lastResult.costType === 'token' ? 'token' : 'hc'}`}>
+            {lastResult.costType === 'token' ? '–ñ–µ—Ç–æ–Ω—ã' : '–ó–æ–ª–æ—Ç–æ'}
+          </span>
+          {#if lastResult.isCompletionReward}
+            <span class="badge completion">üèÜ –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ</span>
+          {/if}
+        </div>
+        <h2>{getMutantName(lastResult.item.specimen)}</h2>
+        {#if STAR_ICON[lastResult.item.stars]}
+          <img class="star" src={STAR_ICON[lastResult.item.stars]} alt={STAR_LABEL[lastResult.item.stars]} />
+        {/if}
+        <p class="odds">–®–∞–Ω—Å: {formatPercent(lastResult.item)}</p>
+        {#if lastResult.completedNow}
+          <p class="completion-message">–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à—ë–Ω!</p>
+        {/if}
+      </div>
+    {/if}
+  </section>
+
+  <section class="mutants-panel">
+    <h3>–°–ø–∏—Å–æ–∫ –Ω–∞–≥—Ä–∞–¥</h3>
+    <div class="mutant-grid">
+      {#each baseRewards as reward}
+        <div class={`mutant-card ${unlocked.has(reward.specimen) ? 'unlocked' : ''}`}>
+          <div class="mutant-name">{reward.name}</div>
+          <div class="mutant-meta">
+            {#if STAR_ICON[reward.stars]}
+              <img src={STAR_ICON[reward.stars]} alt={STAR_LABEL[reward.stars]} title={STAR_LABEL[reward.stars]} />
+            {/if}
+            <span class="chance">{formatPercent(reward)}</span>
+          </div>
+          <div class="status-line">
+            {unlocked.has(reward.specimen) ? '–û—Ç–∫—Ä—ã—Ç' : '–ù–µ –ø–æ–ª—É—á–µ–Ω'}
+          </div>
+        </div>
+      {/each}
+      {#if completionReward}
+        <div class={`mutant-card completion ${completed ? 'unlocked' : ''}`}>
+          <div class="mutant-name">üèÜ {completionReward.name}</div>
+          <div class="mutant-meta">
+            {#if STAR_ICON[completionReward.stars]}
+              <img src={STAR_ICON[completionReward.stars]} alt={STAR_LABEL[completionReward.stars]} />
+            {/if}
+            <span class="chance">
+              {completed ? formatPercent(completionReward) : '‚Äî'}
+            </span>
+          </div>
+          <div class="status-line">
+            {completed ? '–î–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø—É–ª–µ' : '–û—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–±–æ—Ä–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏'}
+          </div>
+        </div>
+      {/if}
+    </div>
+
+    {#if history.length}
+      <div class="history">
+        <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏</h3>
+        <ul>
+          {#each history as entry, index}
+            <li>
+              <span class={`badge ${entry.costType === 'token' ? 'token' : 'hc'}`}>
+                {entry.costType === 'token' ? '–ñ–µ—Ç–æ–Ω—ã' : '–ó–æ–ª–æ—Ç–æ'}
+              </span>
+              <strong>{getMutantName(entry.item.specimen)}</strong>
+              {#if entry.isCompletionReward}
+                <span class="small">üèÜ</span>
+              {/if}
+              {#if entry.completedNow}
+                <span class="small">(–∫–æ–ª–ª–µ–∫—Ü–∏—è —Å–æ–±—Ä–∞–Ω–∞)</span>
+              {/if}
+            </li>
+          {/each}
+        </ul>
+      </div>
+    {/if}
+  </section>
+</div>
+
+<style>
+  .reactor-wrapper {
+    display: grid;
+    grid-template-columns: minmax(0, 1.1fr) minmax(0, 1fr);
+    gap: 2rem;
+  }
+
+  @media (max-width: 980px) {
+    .reactor-wrapper {
+      grid-template-columns: 1fr;
+    }
+  }
+
+  .reactor-panel {
+    background: linear-gradient(160deg, rgba(44,62,80,0.85), rgba(20,24,32,0.9));
+    border: 1px solid #2f3846;
+    border-radius: 18px;
+    padding: 2rem;
+    box-shadow: 0 20px 40px rgba(0,0,0,0.35);
+    display: flex;
+    flex-direction: column;
+    gap: 1.5rem;
+  }
+
+  .panel-header {
+    display: flex;
+    align-items: center;
+    justify-content: space-between;
+    gap: 1.5rem;
+  }
+
+  .panel-header h1 {
+    margin: 0;
+    font-size: 2rem;
+    color: #f1f5f9;
+  }
+
+  .panel-header .subtitle {
+    margin: 0.25rem 0 0;
+    color: #94a3b8;
+    font-size: 0.95rem;
+  }
+
+  .cost-block {
+    display: flex;
+    gap: 1rem;
+  }
+
+  .cost-item {
+    background: rgba(15,23,42,0.7);
+    border-radius: 12px;
+    padding: 0.75rem 1rem;
+    text-align: center;
+    border: 1px solid rgba(148,163,184,0.15);
+  }
+
+  .cost-label {
+    display: block;
+    font-size: 0.8rem;
+    color: #94a3b8;
+    margin-bottom: 0.25rem;
+  }
+
+  .cost-item strong {
+    font-size: 1.25rem;
+    color: #f8fafc;
+  }
+
+  .actions {
+    display: flex;
+    gap: 1rem;
+    flex-wrap: wrap;
+  }
+
+  .spin {
+    flex: 1 1 220px;
+    padding: 1rem 1.5rem;
+    border-radius: 14px;
+    border: none;
+    cursor: pointer;
+    font-size: 1rem;
+    font-weight: 700;
+    letter-spacing: 0.01em;
+    transition: transform 0.2s ease, box-shadow 0.2s ease, filter 0.2s ease;
+  }
+
+  .spin.token {
+    background: linear-gradient(135deg, #22d3ee, #3b82f6);
+    color: #0f172a;
+    box-shadow: 0 14px 25px rgba(34,211,238,0.3);
+  }
+
+  .spin.hc {
+    background: linear-gradient(135deg, #f97316, #ef4444);
+    color: #0f172a;
+    box-shadow: 0 14px 25px rgba(249,115,22,0.3);
+  }
+
+  .spin:hover {
+    transform: translateY(-2px);
+    filter: brightness(1.05);
+  }
+
+  .status {
+    background: rgba(15,23,42,0.7);
+    border-radius: 14px;
+    padding: 1.5rem;
+    border: 1px solid rgba(148,163,184,0.15);
+  }
+
+  .progress > span {
+    font-size: 0.95rem;
+    color: #e2e8f0;
+    display: block;
+    margin-bottom: 0.5rem;
+  }
+
+  .progress-bar {
+    background: rgba(148,163,184,0.2);
+    border-radius: 999px;
+    overflow: hidden;
+    height: 12px;
+  }
+
+  .progress-fill {
+    background: linear-gradient(135deg, #34d399, #10b981);
+    height: 100%;
+    transition: width 0.3s ease;
+  }
+
+  .progress small {
+    display: block;
+    margin-top: 0.5rem;
+    color: #94a3b8;
+    font-size: 0.85rem;
+  }
+
+  .completion {
+    margin-top: 0.75rem;
+    padding: 0.5rem 0.75rem;
+    background: rgba(16,185,129,0.15);
+    border: 1px solid rgba(16,185,129,0.4);
+    border-radius: 10px;
+    color: #6ee7b7;
+    font-size: 0.95rem;
+  }
+
+  .result-card {
+    background: linear-gradient(140deg, rgba(148,163,184,0.08), rgba(59,130,246,0.12));
+    border-radius: 16px;
+    padding: 1.5rem;
+    border: 1px solid rgba(59,130,246,0.2);
+  }
+
+  .result-header {
+    display: flex;
+    gap: 0.5rem;
+    margin-bottom: 1rem;
+  }
+
+  .badge {
+    display: inline-flex;
+    align-items: center;
+    justify-content: center;
+    padding: 0.35rem 0.75rem;
+    border-radius: 999px;
+    font-size: 0.8rem;
+    font-weight: 700;
+  }
+
+  .badge.token {
+    background: rgba(34,211,238,0.2);
+    color: #22d3ee;
+    border: 1px solid rgba(34,211,238,0.5);
+  }
+
+  .badge.hc {
+    background: rgba(249,115,22,0.2);
+    color: #fb923c;
+    border: 1px solid rgba(249,115,22,0.45);
+  }
+
+  .badge.completion {
+    background: rgba(250,204,21,0.2);
+    color: #facc15;
+    border: 1px solid rgba(250,204,21,0.45);
+  }
+
+  .result-card h2 {
+    margin: 0 0 0.5rem;
+    color: #f8fafc;
+  }
+
+  .result-card .star {
+    height: 48px;
+    margin-bottom: 0.75rem;
+  }
+
+  .result-card .odds {
+    margin: 0;
+    color: #94a3b8;
+  }
+
+  .completion-message {
+    margin-top: 0.75rem;
+    color: #facc15;
+    font-weight: 700;
+  }
+
+  .mutants-panel {
+    background: rgba(15,23,42,0.65);
+    border-radius: 18px;
+    border: 1px solid rgba(30,41,59,0.8);
+    padding: 2rem;
+    display: flex;
+    flex-direction: column;
+    gap: 1.5rem;
+  }
+
+  .mutants-panel h3 {
+    margin: 0;
+    color: #e2e8f0;
+    font-size: 1.3rem;
+  }
+
+  .mutant-grid {
+    display: grid;
+    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
+    gap: 1rem;
+  }
+
+  .mutant-card {
+    background: rgba(30,41,59,0.75);
+    border-radius: 12px;
+    padding: 1rem;
+    border: 1px solid rgba(148,163,184,0.12);
+    display: flex;
+    flex-direction: column;
+    gap: 0.5rem;
+    transition: transform 0.2s ease, border-color 0.2s ease;
+  }
+
+  .mutant-card.unlocked {
+    border-color: rgba(16,185,129,0.5);
+    transform: translateY(-2px);
+  }
+
+  .mutant-card.completion {
+    background: linear-gradient(140deg, rgba(250,204,21,0.12), rgba(30,41,59,0.85));
+  }
+
+  .mutant-name {
+    font-size: 1rem;
+    color: #f1f5f9;
+  }
+
+  .mutant-meta {
+    display: flex;
+    align-items: center;
+    gap: 0.5rem;
+  }
+
+  .mutant-meta img {
+    height: 28px;
+    width: 28px;
+  }
+
+  .chance {
+    color: #94a3b8;
+    font-size: 0.9rem;
+  }
+
+  .status-line {
+    margin-top: auto;
+    font-size: 0.85rem;
+    color: #64748b;
+  }
+
+  .mutant-card.unlocked .status-line {
+    color: #34d399;
+  }
+
+  .history ul {
+    list-style: none;
+    padding: 0;
+    margin: 0;
+    display: flex;
+    flex-direction: column;
+    gap: 0.75rem;
+  }
+
+  .history li {
+    display: flex;
+    align-items: center;
+    gap: 0.75rem;
+    font-size: 0.95rem;
+    color: #e2e8f0;
+  }
+
+  .history .small {
+    font-size: 0.8rem;
+    color: #facc15;
+  }
+</style>
diff --git a/src/data/simulators/reactor/gacha.json b/src/data/simulators/reactor/gacha.json
new file mode 100644
index 0000000000000000000000000000000000000000..e4c9f41967b1ad2f6b433c6bdfea0d589744f558
--- /dev/null
+++ b/src/data/simulators/reactor/gacha.json
@@ -0,0 +1,819 @@
+{
+  "girl": {
+    "token_cost": 1,
+    "hc_cost": 1125,
+    "filter": "gacha_pack_girl",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_AA_01",
+        "stars": 0,
+        "odds": 29,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CD_01",
+        "stars": 0,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CB_01",
+        "stars": 0,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_F_01",
+        "stars": 1,
+        "odds": 11,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_FB_01",
+        "stars": 1,
+        "odds": 18,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_CF_01",
+      "stars": 3,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "gothic": {
+    "token_cost": 1,
+    "hc_cost": 1150,
+    "filter": "gacha_pack_gothic",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_CE_01",
+        "stars": 0,
+        "odds": 29,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BF_01",
+        "stars": 0,
+        "odds": 22,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_DC_01",
+        "stars": 0,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_E_01",
+        "stars": 1,
+        "odds": 11,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_FD_01",
+        "stars": 2,
+        "odds": 18,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_DC_03",
+      "stars": 3,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "steampunk": {
+    "token_cost": 1,
+    "hc_cost": 1150,
+    "filter": "gacha_pack_steampunk",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_BF_02",
+        "stars": 0,
+        "odds": 29,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_EC_01",
+        "stars": 0,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_AB_01",
+        "stars": 1,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_C_01",
+        "stars": 2,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_AC_02",
+        "stars": 3,
+        "odds": 11,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_AD_01",
+      "stars": 3,
+      "odds": 11,
+      "bonus": -10
+    }
+  },
+  "heroes": {
+    "token_cost": 2,
+    "hc_cost": 1850,
+    "filter": "gacha_pack_heroes",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_FC_02",
+        "stars": 0,
+        "odds": 29,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_AE_01",
+        "stars": 1,
+        "odds": 22,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_BB_01",
+        "stars": 2,
+        "odds": 20,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_CA_01",
+        "stars": 3,
+        "odds": 18,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_FA_01",
+        "stars": 3,
+        "odds": 11,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_EF_02",
+      "stars": 3,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "japan": {
+    "token_cost": 3,
+    "hc_cost": 2300,
+    "filter": "gacha_pack_japan",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_CC_01",
+        "stars": 1,
+        "odds": 29,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_A_01",
+        "stars": 2,
+        "odds": 22,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_DF_01",
+        "stars": 3,
+        "odds": 20,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_BA_02",
+        "stars": 3,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CB_02",
+        "stars": 3,
+        "odds": 11,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_FD_03",
+      "stars": 3,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "starwars": {
+    "token_cost": 3,
+    "hc_cost": 2300,
+    "filter": "gacha_pack_starwars",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_AF_04",
+        "stars": 1,
+        "odds": 29,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_CC_03",
+        "stars": 2,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CD_01",
+        "stars": 3,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_EC_01",
+        "stars": 3,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BC_01",
+        "stars": 3,
+        "odds": 11,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_BF_04",
+      "stars": 3,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "music": {
+    "token_cost": 4,
+    "hc_cost": 2500,
+    "filter": "gacha_pack_music",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_AA_03",
+        "stars": 2,
+        "odds": 29,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BF_06",
+        "stars": 2,
+        "odds": 22,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_EE_04",
+        "stars": 3,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_FB_05",
+        "stars": 4,
+        "odds": 18,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_DE_05",
+        "stars": 4,
+        "odds": 11,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_DA_09",
+      "stars": 4,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "western": {
+    "token_cost": 4,
+    "hc_cost": 2500,
+    "filter": "gacha_pack_western",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_FF_06",
+        "stars": 3,
+        "odds": 29,
+        "bonus": 15
+      },
+      {
+        "specimen": "Specimen_FC_07",
+        "stars": 3,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_AA_06",
+        "stars": 4,
+        "odds": 20,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_DB_04",
+        "stars": 0,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CF_06",
+        "stars": 0,
+        "odds": 11,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_BF_10",
+      "stars": 4,
+      "odds": 11,
+      "bonus": -10
+    }
+  },
+  "beach": {
+    "token_cost": 4,
+    "hc_cost": 2500,
+    "filter": "gacha_pack_beach",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_FE_08",
+        "stars": 3,
+        "odds": 29,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_EE_07",
+        "stars": 4,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BB_08",
+        "stars": 2,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_AB_07",
+        "stars": 0,
+        "odds": 18,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_AF_08",
+        "stars": 3,
+        "odds": 11,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_CA_11",
+      "stars": 4,
+      "odds": 11,
+      "bonus": 0
+    }
+  },
+  "vegetal": {
+    "token_cost": 5,
+    "hc_cost": 2500,
+    "filter": "gacha_pack_vegetal",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_BB_02",
+        "stars": 3,
+        "odds": 32,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_DC_08",
+        "stars": 2,
+        "odds": 23,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_AF_01",
+        "stars": 4,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_DE_09",
+        "stars": 3,
+        "odds": 15,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_CA_06",
+        "stars": 3,
+        "odds": 10,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_DF_12",
+      "stars": 4,
+      "odds": 11,
+      "bonus": 0
+    }
+  },
+  "olympics": {
+    "token_cost": 5,
+    "hc_cost": 2500,
+    "filter": "gacha_pack_olympics",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_FA_08",
+        "stars": 2,
+        "odds": 32,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_CA_02",
+        "stars": 4,
+        "odds": 23,
+        "bonus": 20
+      },
+      {
+        "specimen": "Specimen_FD_06",
+        "stars": 3,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CA_07",
+        "stars": 2,
+        "odds": 15,
+        "bonus": 15
+      },
+      {
+        "specimen": "Specimen_CA_08",
+        "stars": 3,
+        "odds": 10,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_CA_14",
+      "stars": 4,
+      "odds": 11,
+      "bonus": 0
+    }
+  },
+  "gachaboss": {
+    "token_cost": 3,
+    "hc_cost": 2300,
+    "filter": "gacha_pack_gachaboss",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_FF_01",
+        "stars": 1,
+        "odds": 29,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_D_01",
+        "stars": 2,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_FB_03",
+        "stars": 3,
+        "odds": 20,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_DB_01",
+        "stars": 3,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_EA_01",
+        "stars": 3,
+        "odds": 11,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_AB_05",
+      "stars": 3,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "villains": {
+    "token_cost": 3,
+    "hc_cost": 2300,
+    "filter": "gacha_pack_villains",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_DA_01",
+        "stars": 1,
+        "odds": 29,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_B_01",
+        "stars": 2,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_AB_02",
+        "stars": 3,
+        "odds": 20,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_EC_03",
+        "stars": 3,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BA_03",
+        "stars": 3,
+        "odds": 11,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_CE_05",
+      "stars": 3,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "olympians": {
+    "token_cost": 3,
+    "hc_cost": 2300,
+    "filter": "gacha_pack_olympians",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_CC_04",
+        "stars": 0,
+        "odds": 29,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_AC_01",
+        "stars": 1,
+        "odds": 22,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_BC_02",
+        "stars": 2,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BB_03",
+        "stars": 3,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CE_03",
+        "stars": 3,
+        "odds": 11,
+        "bonus": -10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_EC_06",
+      "stars": 3,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "movies": {
+    "token_cost": 3,
+    "hc_cost": 2300,
+    "filter": "gacha_pack_movies",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_ED_03",
+        "stars": 1,
+        "odds": 29,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_EB_04",
+        "stars": 2,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CB_03",
+        "stars": 3,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BD_03",
+        "stars": 3,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CC_02",
+        "stars": 3,
+        "odds": 11,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_FA_06",
+      "stars": 4,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "elements": {
+    "token_cost": 3,
+    "hc_cost": 2300,
+    "filter": "gacha_pack_elements",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_EF_01",
+        "stars": 1,
+        "odds": 30,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_EB_02",
+        "stars": 2,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BD_04",
+        "stars": 3,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_EB_05",
+        "stars": 3,
+        "odds": 21,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_DF_04",
+        "stars": 3,
+        "odds": 9,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_EB_06",
+      "stars": 4,
+      "odds": 7,
+      "bonus": 10
+    }
+  },
+  "soldiers": {
+    "token_cost": 3,
+    "hc_cost": 2300,
+    "filter": "gacha_pack_soldiers",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_AB_04",
+        "stars": 2,
+        "odds": 29,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CF_02",
+        "stars": 3,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BC_04",
+        "stars": 0,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_AD_05",
+        "stars": 3,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_CD_06",
+        "stars": 4,
+        "odds": 11,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_BD_07",
+      "stars": 4,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "lucha": {
+    "token_cost": 4,
+    "hc_cost": 2500,
+    "filter": "gacha_pack_lucha",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_CF_03",
+        "stars": 3,
+        "odds": 29,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_DE_04",
+        "stars": 2,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_DC_05",
+        "stars": 3,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_FE_04",
+        "stars": 4,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BE_05",
+        "stars": 4,
+        "odds": 11,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_AC_07",
+      "stars": 4,
+      "odds": 11,
+      "bonus": 10
+    }
+  },
+  "fantasy": {
+    "token_cost": 4,
+    "hc_cost": 2500,
+    "filter": "gacha_pack_fantasy",
+    "basic_elements": [
+      {
+        "specimen": "Specimen_FC_04",
+        "stars": 2,
+        "odds": 29,
+        "bonus": -10
+      },
+      {
+        "specimen": "Specimen_FC_05",
+        "stars": 2,
+        "odds": 22,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_DB_06",
+        "stars": 3,
+        "odds": 20,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_AC_03",
+        "stars": 4,
+        "odds": 18,
+        "bonus": 10
+      },
+      {
+        "specimen": "Specimen_BD_05",
+        "stars": 4,
+        "odds": 11,
+        "bonus": 10
+      }
+    ],
+    "completion_reward": {
+      "specimen": "Specimen_FC_09",
+      "stars": 4,
+      "odds": 11,
+      "bonus": 10
+    }
+  }
+}
\ No newline at end of file
diff --git a/src/data/simulators/reactor/mutant_names (2).json b/src/data/simulators/reactor/mutant_names.json
similarity index 99%
rename from src/data/simulators/reactor/mutant_names (2).json
rename to src/data/simulators/reactor/mutant_names.json
index e6eca61594a06043b00b235af212b1d2b0da2b4e..2e66917743f190c71db3da370b39189e3d117f42 100644
--- a/src/data/simulators/reactor/mutant_names (2).json	
+++ b/src/data/simulators/reactor/mutant_names.json
@@ -2624,26 +2624,26 @@
   "Specimen_FF_09_Bronze_sc": "–ë—Ä–æ–Ω–∑–æ–≤—ã–π –ú–æ–∫—Ä—É—à–Ω–∏–∫",
   "Specimen_FF_09_Gold": "–ó–æ–ª–æ—Ç–æ–π –ú–æ–∫—Ä—É—à–Ω–∏–∫",
   "Specimen_FF_09_rc": "–ú–æ–∫—Ä—É—à–Ω–∏–∫",
   "Specimen_FF_09_rc_payment_text": "–ú–æ–∫—Ä—É—à–Ω–∏–∫",
   "Specimen_FF_09_sc": "–ú–æ–∫—Ä—É—à–Ω–∏–∫",
   "Specimen_FF_10": "–ë—Ä–µ–≥–±–∏–º",
   "Specimen_FF_10_attack_1": "–î–∏–∫–∏–π –ª—É—á",
   "Specimen_FF_10_attack_1p": "–î–∏–∫–∏–π –ª—É—á",
   "Specimen_FF_10_attack_2": "–ó–æ–≤ –ø—Ä–∏—Ä–æ–¥—ã",
   "Specimen_FF_10_attack_2p": "–ó–æ–≤ –ø—Ä–∏—Ä–æ–¥—ã",
   "Specimen_FF_10_Gold": "–ó–æ–ª–æ—Ç–∞—è –ë—Ä–µ–≥–±–∏–º",
   "Specimen_FF_10_rc": "–ë—Ä–µ–≥–±–∏–º",
   "Specimen_FF_10_rc_payment_text": "–ë—Ä–µ–≥–±–∏–º",
   "Specimen_FF_11": "–ñ–µ—Ä–∞—Ä –°—Ç–∏–ª–≥–∞—Ä–¥–µ–Ω",
   "Specimen_FF_11_Gold": "–ó–æ–ª–æ—Ç–æ–π –ñ–µ—Ä–∞—Ä –°—Ç–∏–ª–≥–∞—Ä–¥–µ–Ω",
   "Specimen_FF_11_rc": "–ñ–µ—Ä–∞—Ä –°—Ç–∏–ª–≥–∞—Ä–¥–µ–Ω",
   "Specimen_FF_11_rc_payment_text": "–ñ–µ—Ä–∞—Ä –°—Ç–∏–ª–≥–∞—Ä–¥–µ–Ω",
   "Specimen_FF_11_Silver": "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π –ñ–µ—Ä–∞—Ä –°—Ç–∏–ª–≥–∞—Ä–¥–µ–Ω",
   "Specimen_FF_12": "–í–µ—á–Ω—ã–π –∞—Ä—Ö–∏–≤–∞—Ä–∏—É—Å",
   "Specimen_FF_13": "–°–∞–∫—É—Ä–∞–±–æ—à–∏",
   "Specimen_FF_13_Gold": "–ó–æ–ª–æ—Ç–æ–π –°–∞–∫—É—Ä–∞–±–æ—à–∏",
   "Specimen_FF_13_rc": "–°–∞–∫—É—Ä–∞–±–æ—à–∏",
   "Specimen_FF_13_rc_payment_text": "–°–∞–∫—É—Ä–∞–±–æ—à–∏",
   "Specimen_FF_14": "–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø—Ä–æ—Ä–æ–∫",
   "Specimen_FF_99": "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–∞—Å–∫–∞—Ä–∞–¥–∞"
-}
+}
\ No newline at end of file
diff --git a/src/lib/reactor-gacha.ts b/src/lib/reactor-gacha.ts
new file mode 100644
index 0000000000000000000000000000000000000000..507db064b40c765de09be931ccf8472c65c274b7
--- /dev/null
+++ b/src/lib/reactor-gacha.ts
@@ -0,0 +1,93 @@
+import gachaRaw from '@/data/simulators/reactor/gacha.json';
+import mutantNamesRaw from '@/data/simulators/reactor/mutant_names.json';
+
+export type GachaId = keyof typeof gachaRaw;
+
+export interface BasicReward {
+  specimen: string;
+  stars: number;
+  odds: number;
+  bonus: number;
+}
+
+export interface GachaDefinition {
+  token_cost: number;
+  hc_cost: number;
+  filter: string;
+  basic_elements: BasicReward[];
+  completion_reward: BasicReward | null;
+}
+
+export interface GachaMeta extends GachaDefinition {
+  id: string;
+  name: string;
+  totalOdds: number;
+}
+
+export const STAR_LABEL: Record<number, string> = {
+  0: '',
+  1: '–ë—Ä–æ–Ω–∑–æ–≤–∞—è –∑–≤–µ–∑–¥–∞',
+  2: '–°–µ—Ä–µ–±—Ä—è–Ω–∞—è –∑–≤–µ–∑–¥–∞',
+  3: '–ó–æ–ª–æ—Ç–∞—è –∑–≤–µ–∑–¥–∞',
+  4: '–ü–ª–∞—Ç–∏–Ω–æ–≤–∞—è –∑–≤–µ–∑–¥–∞',
+};
+
+export const STAR_ICON: Record<number, string> = {
+  0: '/stars/no_stars.png',
+  1: '/stars/star_bronze.png',
+  2: '/stars/star_silver.png',
+  3: '/stars/star_gold.png',
+  4: '/stars/star_platinum.png',
+};
+
+export const GACHA_NAME_RU: Record<string, string> = {
+  western: 'Western',
+  gachaboss: '–ë–æ–ª—å—à–æ–π –±–æ—Å—Å',
+  japan: '–Ø–ø–æ–Ω–∏—è',
+  fantasy: '–¢–µ–º–Ω–æ–µ —Ñ–µ–Ω—Ç–µ–∑–∏',
+  lucha: "–ú—É—á–∞—á–æ's",
+  olympians: '–ë–æ–≥–∏ –∞—Ä–µ–Ω—ã',
+  music: '–î–∏—Å–∫–æ',
+  villains: '–°—É–ø–µ—Ä –∑–ª–æ–¥–µ–∏',
+  starwars: '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ –≤–æ–π–Ω—ã',
+  beach: '–¢—Ä–æ–ø–∏—á–µ—Å–∫–æ–µ –ª–µ—Ç–æ',
+  heroes: '–°—É–ø–µ—Ä–≥–µ—Ä–æ–∏',
+  soldiers: '–ü–∞—Ç—Ä—É–ª—å –≤—Ä–µ–º–µ–Ω–∏',
+  gothic: '–ì–æ—Ç–∏–∫–∞',
+  movies: '–ö–∏–Ω–æ',
+  elements: '–ö–æ–º–∞–Ω–¥–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–ª–µ–π',
+  steampunk: '–°—Ç–∏–º–ø–∞–Ω–∫',
+  vegetal: '–§–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑',
+  girl: '–•–∏—â–Ω–∏—Ü—ã',
+  olympics: '–ö—Ä–æ–≤–∞–≤—ã–µ –∏–≥—Ä—ã',
+};
+
+export const mutantNames: Record<string, string> = mutantNamesRaw;
+
+export const gachaMap: Record<string, GachaDefinition> = gachaRaw;
+
+export function getGachaMeta(id: string): GachaMeta | null {
+  const definition = gachaMap[id];
+  if (!definition) {
+    return null;
+  }
+  const totalOdds = definition.basic_elements.reduce((sum, item) => sum + item.odds, 0);
+  const name = GACHA_NAME_RU[id] ?? id;
+  return {
+    id,
+    name,
+    totalOdds,
+    ...definition,
+  };
+}
+
+export function listGachas(): GachaMeta[] {
+  return Object.keys(gachaMap)
+    .map((id) => getGachaMeta(id)!)
+    .filter(Boolean)
+    .sort((a, b) => a.name.localeCompare(b.name, 'ru'));
+}
+
+export function getMutantName(specimenId: string): string {
+  return mutantNames[specimenId] ?? specimenId;
+}
diff --git a/src/pages/simulators/index.astro b/src/pages/simulators/index.astro
index ef018debf280a52e72298c1679b418c378c87c83..f0fc4ee73d4738df7acdca5df20352c2ebb1e8af 100644
--- a/src/pages/simulators/index.astro
+++ b/src/pages/simulators/index.astro
@@ -1,24 +1,29 @@
 ---
 import BaseLayout from '../../layouts/BaseLayout.astro';
 import CardGrid from '../../components/CardGrid.astro';
 ---
 <BaseLayout title="–°–∏–º—É–ª—è—Ç–æ—Ä—ã">
   <h1>–°–∏–º—É–ª—è—Ç–æ—Ä—ã</h1>
   <p>–í—ã–±–µ—Ä–∏—Ç–µ —Å–∏–º—É–ª—è—Ç–æ—Ä, —á—Ç–æ–±—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —Ä–∞–±–æ—Ç—É. –ö–∞–∂–¥—ã–π —Å–∏–º—É–ª—è—Ç–æ—Ä
   —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—ã –∏ —à–∞–Ω—Å—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.</p>
   <CardGrid
     cards={[
       {
         title: 'Breeding',
         desc: '–°–∫—Ä–µ—â–∏–≤–∞–Ω–∏—è –º—É—Ç–∞–Ω—Ç–æ–≤',
         href: 'simulators/breeding',
       },
       {
         title: 'Stats Calculator',
         desc: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–∞—Ç–æ–≤ –º—É—Ç–∞–Ω—Ç–æ–≤',
         href: 'simulators/stats',         // ‚Üê –Ω–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
       },
+      {
+        title: 'Reactor Simulator',
+        desc: '–í—Å–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Ä–µ–∞–∫—Ç–æ—Ä–∞ –∏ —à–∞–Ω—Å—ã –≤—ã–ø–∞–¥–µ–Ω–∏—è –º—É—Ç–∞–Ω—Ç–æ–≤',
+        href: 'simulators/reactor',
+      },
       // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ ...
     ]}
   />
 </BaseLayout>
diff --git a/src/pages/simulators/reactor/[gachaId].astro b/src/pages/simulators/reactor/[gachaId].astro
new file mode 100644
index 0000000000000000000000000000000000000000..3d30c12d05ba926564bf52f336717dcd251000fc
--- /dev/null
+++ b/src/pages/simulators/reactor/[gachaId].astro
@@ -0,0 +1,40 @@
+---
+import BaseLayout from '../../../layouts/BaseLayout.astro';
+import ReactorSimulator from '../../../components/simulators/reactor/ReactorSimulator.svelte';
+import { getGachaMeta, listGachas } from '../../../lib/reactor-gacha';
+
+interface Props {
+  gacha: ReturnType<typeof getGachaMeta> extends infer T ? Exclude<T, null> : never;
+}
+
+export function getStaticPaths() {
+  return listGachas().map((gacha) => ({
+    params: { gachaId: gacha.id },
+    props: { gacha },
+  }));
+}
+
+const { gacha } = Astro.props as Props;
+---
+<BaseLayout title={`–†–µ–∞–∫—Ç–æ—Ä ‚Äî ${gacha.name}`}>
+  <a class="back-link" href="/simulators/reactor">‚Üê –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞</a>
+  <ReactorSimulator client:load gachaId={gacha.id} />
+</BaseLayout>
+
+<style>
+  .back-link {
+    display: inline-flex;
+    align-items: center;
+    gap: 0.25rem;
+    margin-bottom: 1.5rem;
+    color: #93c5fd;
+    text-decoration: none;
+    font-size: 0.95rem;
+    text-transform: uppercase;
+    letter-spacing: 0.08em;
+  }
+
+  .back-link:hover {
+    text-decoration: underline;
+  }
+</style>
diff --git a/src/pages/simulators/reactor/index.astro b/src/pages/simulators/reactor/index.astro
new file mode 100644
index 0000000000000000000000000000000000000000..b1758e29ce2e9fd39b706e012a4907bfe36e7e4e
--- /dev/null
+++ b/src/pages/simulators/reactor/index.astro
@@ -0,0 +1,145 @@
+---
+import BaseLayout from '../../../layouts/BaseLayout.astro';
+import { listGachas } from '../../../lib/reactor-gacha';
+
+const gachas = listGachas();
+---
+<BaseLayout title="–†–µ–∞–∫—Ç–æ—Ä ‚Äî –≤—ã–±–æ—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞">
+  <section class="intro">
+    <h1>–†–µ–∞–∫—Ç–æ—Ä: –≤—ã–±–µ—Ä–∏—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä</h1>
+    <p>
+      –ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Ä–µ–∞–∫—Ç–æ—Ä–∞ Mutants: Genetic Gladiators.
+      –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–∏–º—É–ª—è—Ç–æ—Ä—É –∏ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –±–∞—Ä–∞–±–∞–Ω.
+    </p>
+  </section>
+
+  <section class="gacha-grid">
+    {gachas.map((gacha) => (
+      <a class="gacha-card" href={`/simulators/reactor/${gacha.id}`}>
+        <div class="card-header">
+          <h2>{gacha.name}</h2>
+          <span class="tag">{gacha.filter}</span>
+        </div>
+        <div class="card-body">
+          <div class="stat">
+            <span class="label">–ú—É—Ç–∞–Ω—Ç–æ–≤</span>
+            <strong>{gacha.basic_elements.length}</strong>
+          </div>
+          <div class="stat">
+            <span class="label">–ñ–µ—Ç–æ–Ω—ã</span>
+            <strong>{gacha.token_cost}</strong>
+          </div>
+          <div class="stat">
+            <span class="label">–ó–æ–ª–æ—Ç–æ</span>
+            <strong>{gacha.hc_cost}</strong>
+          </div>
+        </div>
+        <span class="cta">–û—Ç–∫—Ä—ã—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä ‚Üí</span>
+      </a>
+    ))}
+  </section>
+</BaseLayout>
+
+<style>
+  .intro {
+    margin-bottom: 2.5rem;
+  }
+
+  .intro h1 {
+    margin: 0 0 1rem;
+    font-size: 2.4rem;
+    color: #f8fafc;
+  }
+
+  .intro p {
+    margin: 0;
+    color: #94a3b8;
+    max-width: 720px;
+    font-size: 1rem;
+    line-height: 1.7;
+  }
+
+  .gacha-grid {
+    display: grid;
+    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
+    gap: 1.5rem;
+  }
+
+  .gacha-card {
+    display: flex;
+    flex-direction: column;
+    gap: 1rem;
+    padding: 1.5rem;
+    border-radius: 18px;
+    border: 1px solid rgba(148, 163, 184, 0.18);
+    background: radial-gradient(circle at top, rgba(59, 130, 246, 0.25), rgba(15, 23, 42, 0.85));
+    color: #e2e8f0;
+    text-decoration: none;
+    transition: transform 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
+  }
+
+  .gacha-card:hover {
+    transform: translateY(-4px);
+    border-color: rgba(96, 165, 250, 0.6);
+    box-shadow: 0 18px 32px rgba(37, 99, 235, 0.25);
+  }
+
+  .card-header {
+    display: flex;
+    justify-content: space-between;
+    align-items: flex-start;
+    gap: 0.5rem;
+  }
+
+  .card-header h2 {
+    margin: 0;
+    font-size: 1.4rem;
+    line-height: 1.25;
+    color: #f8fafc;
+  }
+
+  .tag {
+    background: rgba(15, 23, 42, 0.6);
+    border: 1px solid rgba(148, 163, 184, 0.25);
+    border-radius: 999px;
+    padding: 0.25rem 0.75rem;
+    font-size: 0.75rem;
+    text-transform: uppercase;
+    letter-spacing: 0.08em;
+    color: #cbd5f5;
+  }
+
+  .card-body {
+    display: grid;
+    grid-template-columns: repeat(3, minmax(0, 1fr));
+    gap: 0.75rem;
+  }
+
+  .stat {
+    background: rgba(15, 23, 42, 0.55);
+    border-radius: 12px;
+    padding: 0.75rem;
+    text-align: center;
+    border: 1px solid rgba(148, 163, 184, 0.18);
+  }
+
+  .stat .label {
+    display: block;
+    font-size: 0.75rem;
+    color: #94a3b8;
+    margin-bottom: 0.25rem;
+  }
+
+  .stat strong {
+    font-size: 1.15rem;
+    color: #f8fafc;
+  }
+
+  .cta {
+    margin-top: auto;
+    font-size: 0.95rem;
+    color: #93c5fd;
+    text-transform: uppercase;
+    letter-spacing: 0.08em;
+  }
+</style>
 
EOF
)
